name: Release Suite

on:
  push:
    tags:
      - v0.*
      - v1.*
    branches:
      - nix-builds

env:
  CHANNEL: nightly

jobs:
  artifacts-x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: make artifacts-x86_64-unknown-linux-gnu
        env:
          VERBOSE: true
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-gnu-portable"
          path: "./target/artifacts/x86_64-unknown-linux-gnu/binary-portable/bin/vector"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-gnu-portable.tar.gz"
          path: "./target/artifacts/x86_64-unknown-linux-gnu/tarball-portable/vector-portable.tar.bz2"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-gnu-docker"
          path: "./target/artifacts/x86_64-unknown-linux-gnu/docker"

  artifacts-x86_64-unknown-linux-musl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: make artifacts-x86_64-unknown-linux-musl
        env:
          VERBOSE: true
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-musl-portable"
          path: "./target/artifacts/x86_64-unknown-linux-musl/binary-portable/bin/vector"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-musl-portable.tar.gz"
          path: "./target/artifacts/x86_64-unknown-linux-musl/tarball-portable/vector-portable.tar.bz2"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-musl-docker"
          path: "./target/artifacts/x86_64-unknown-linux-musl/docker"

  artifacts-aarch64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: make artifacts-aarch64-unknown-linux-gnu
        env:
          VERBOSE: true
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-gnu-portable"
          path: "./target/artifacts/aarch64-unknown-linux-gnu/binary-portable/bin/vector"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-gnu-portable.tar.gz"
          path: "./target/artifacts/aarch64-unknown-linux-gnu/tarball-portable/vector-portable.tar.bz2"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-gnu-docker"
          path: "./target/artifacts/aarch64-unknown-linux-gnu/docker"

  artifacts-aarch64-unknown-linux-musl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: make artifacts-aarch64-unknown-linux-musl
        env:
          VERBOSE: true
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-musl-portable"
          path: "./target/artifacts/aarch64-unknown-linux-musl/binary-portable/bin/vector"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-musl-portable.tar.gz"
          path: "./target/artifacts/aarch64-unknown-linux-musl/tarball-portable/vector-portable.tar.bz2"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-musl-docker"
          path: "./target/artifacts/aarch64-unknown-linux-musl/docker"

  artifacts-aarch64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: make artifacts-aarch64-unknown-linux-gnu
        env:
          VERBOSE: true
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-gnu-portable"
          path: "./target/artifacts/aarch64-unknown-linux-gnu/binary-portable/bin/vector"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-gnu-portable.tar.gz"
          path: "./target/artifacts/aarch64-unknown-linux-gnu/tarball-portable/vector-portable.tar.bz2"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-gnu-docker"
          path: "./target/artifacts/aarch64-unknown-linux-gnu/docker"

  artifacts-armv7-unknown-linux-musl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v10
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: make artifacts-armv7-unknown-linux-musl
        env:
          VERBOSE: true
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-armv7-unknown-linux-musl-portable"
          path: "./target/artifacts/armv7-unknown-linux-musl/binary-portable/bin/vector"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-armv7-unknown-linux-musl-portable.tar.gz"
          path: "./target/artifacts/armv7-unknown-linux-musl/tarball-portable/vector-portable.tar.bz2"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-armv7-unknown-linux-musl-docker"
          path: "./target/artifacts/armv7-unknown-linux-musl/docker"


  # build-x86_64-apple-darwin-packages:
  #   runs-on: macos-10.15
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: "Upgrade bash"
  #       run: brew install bash
  #     - name: "Install realpath dependency"
  #       run: brew install coreutils
  #     - name: "Build archive"
  #       env:
  #         TARGET: "x86_64-apple-darwin"
  #         USE_CONTAINER: none
  #         NATIVE_BUILD: true
  #       run: |
  #         export PATH="$HOME/.cargo/bin:$PATH"
  #         make package-archive
  #     - uses: actions/upload-artifact@v1
  #       with:
  #         name: "vector-x86_64-apple-darwin.tar.gz"
  #         path: "./target/artifacts/vector-x86_64-apple-darwin.tar.gz"

  # build-x86_64-pc-windows-msvc-packages:
  #   runs-on: windows-2019
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: "Download Perl"
  #       shell: bash
  #       env:
  #         VERSION: "5.30.0.1"
  #         SHA256SUM: "459de13a284a4c83213208c9caa1c372c81136b6e863a3f13d42f631048e0b12" # we need to verify checksum because strawberryperl.com doesn't support HTTPS
  #       run: |
  #         curl -sSf http://strawberryperl.com/download/$VERSION/strawberry-perl-$VERSION-64bit.msi > perl-installer.msi
  #         echo "$SHA256SUM perl-installer.msi" | sha256sum --check --status
  #     - name: "Install Perl"
  #       shell: cmd # msiexec fails when called from bash
  #       run: |
  #         msiexec /quiet /i perl-installer.msi
  #         del perl-installer.msi
  #     - name: "Download CMake"
  #       shell: bash
  #       env:
  #         VERSION: "3.15.5"
  #       run: |
  #         curl -sSfL https://github.com/Kitware/CMake/releases/download/v$VERSION/cmake-$VERSION-win64-x64.msi > cmake-installer.msi
  #     - name: "Install CMake"
  #       shell: cmd # msiexec fails when called from bash
  #       run: |
  #         msiexec /quiet /i cmake-installer.msi
  #         del cmake-installer.msi
  #     - name: "Install Wix"
  #       shell: bash
  #       run: |
  #         mkdir -p /c/wix
  #         cd /c/wix
  #         curl -sSfL https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip > wix-binaries.zip
  #         unzip wix-binaries.zip
  #         rm wix-binaries.zip
  #     - name: "Build archive"
  #       shell: bash
  #       run: |
  #         export PATH="$HOME/.cargo/bin:/c/Strawberry/perl/bin:/c/Program Files/CMake/bin:$PATH"
  #         export RUSTFLAGS=-Ctarget-feature=+crt-static
  #         export FEATURES="default-msvc"
  #         export ARCHIVE_TYPE="zip"
  #         export KEEP_SYMBOLS="true"
  #         export RUST_LTO=""
  #         export TARGET="x86_64-pc-windows-msvc"
  #         export NATIVE_BUILD="true"
  #         export USE_CONTAINER="none"
  #         make package-archive
  #     - name: "Build package"
  #       shell: bash
  #       run: |
  #         export PATH="/c/wix:$PATH"
  #         ./scripts/package-msi.sh
  #     - uses: actions/upload-artifact@v1
  #       with:
  #         name: "vector-x86_64-pc-windows-msvc.zip"
  #         path: "./target/artifacts/vector-x86_64-pc-windows-msvc.zip"
  #     - uses: actions/upload-artifact@v1
  #       with:
  #         name: "vector-x64.msi"
  #         path: "./target/artifacts/vector-x64.msi"

  # release-docker:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-x86_64-unknown-linux-musl-packages
  #     - build-aarch64-unknown-linux-musl-packages
  #     - build-armv7-unknown-linux-musleabihf-packages
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-aarch64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armv7-unknown-linux-musleabihf.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-amd64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-arm64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armhf.deb
  #         path: target/artifacts
  #     - env:
  #         DOCKER_USERNAME: "${{ secrets.CI_DOCKER_USERNAME }}"
  #         DOCKER_PASSWORD: "${{ secrets.CI_DOCKER_PASSWORD }}"
  #         PLATFORM: "linux/amd64,linux/arm64,linux/arm"
  #         USE_CONTAINER: none
  #       run: |
  #         ./scripts/upgrade-docker.sh
  #         export VERSION=$(make version)
  #         make release-docker

  # release-s3:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-x86_64-unknown-linux-gnu-packages
  #     - build-x86_64-unknown-linux-musl-packages
  #     - build-aarch64-unknown-linux-musl-packages
  #     - build-armv7-unknown-linux-musleabihf-packages
  #     - build-x86_64-apple-darwin-packages
  #     - build-x86_64-pc-windows-msvc-packages
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-unknown-linux-gnu.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-aarch64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armv7-unknown-linux-musleabihf.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-amd64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-arm64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armhf.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-apple-darwin.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-pc-windows-msvc.zip
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x64.msi
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64.rpm
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armv7hl.rpm
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-aarch64.rpm
  #         path: target/artifacts
  #     - env:
  #         AWS_ACCESS_KEY_ID: "${{ secrets.CI_AWS_ACCESS_KEY_ID }}"
  #         AWS_SECRET_ACCESS_KEY: "${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}"
  #         USE_CONTAINER: none
  #       run: make release-s3

  # release-github:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-x86_64-unknown-linux-gnu-packages
  #     - build-x86_64-unknown-linux-musl-packages
  #     - build-aarch64-unknown-linux-musl-packages
  #     - build-armv7-unknown-linux-musleabihf-packages
  #     - build-x86_64-apple-darwin-packages
  #     - build-x86_64-pc-windows-msvc-packages
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-unknown-linux-gnu.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-aarch64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armv7-unknown-linux-musleabihf.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-amd64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-arm64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armhf.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-apple-darwin.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-pc-windows-msvc.zip
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x64.msi
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64.rpm
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armv7hl.rpm
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-aarch64.rpm
  #         path: target/artifacts
  #     - run: |
  #         export PASS_VERSION=$(make version)
  #         export PASS_CIRCLE_SHA1="${{ github.sha }}"
  #         export PASS_GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
  #         make release-github

  # release-homebrew:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-x86_64-unknown-linux-gnu-packages
  #     - build-x86_64-unknown-linux-musl-packages
  #     - build-aarch64-unknown-linux-musl-packages
  #     - build-armv7-unknown-linux-musleabihf-packages
  #     - build-x86_64-apple-darwin-packages
  #     - build-x86_64-pc-windows-msvc-packages
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-unknown-linux-gnu.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-aarch64-unknown-linux-musl.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armv7-unknown-linux-musleabihf.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-amd64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-arm64.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armhf.deb
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-apple-darwin.tar.gz
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64-pc-windows-msvc.zip
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x64.msi
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-x86_64.rpm
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-armv7hl.rpm
  #         path: target/artifacts
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: vector-aarch64.rpm
  #         path: target/artifacts
  #     - run: |
  #         export PASS_VERSION=$(make version)
  #         export PASS_GITHUB_TOKEN="${{ secrets.BRADY_BOT_TOKEN }}"
  #         make release-homebrew
